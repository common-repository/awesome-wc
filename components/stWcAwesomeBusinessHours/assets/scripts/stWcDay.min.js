Vue.component("st-wc-day",{template:'\n    <v-expansion-panel v-show="show(day)" style="border-bottom: 0.5px solid #eee; color: rgba(0,0,0,.6);">\n        <v-expansion-panel-header class="px-0 text-capitalize" style="border-bottom: 0.5px solid #eee;">{{ day }}</v-expansion-panel-header>\n        <v-expansion-panel-content>\n            <v-row class="">\n                <v-col cols="6" class="d-flex align-start pb-0">Closed</v-col>\n                <v-col cols="6" class="d-flex justify-end pb-0">\n                    <v-switch v-model="closed" @change="update(\'closed\')" dense></v-switch>\n                </v-col>\n            </v-row>\n            <v-row v-show="!closed">\n                <v-col cols="12" md="7" class="d-flex align-start py-0">Hours</v-col>\n                <v-col cols="12" md="5" class="d-flex align-start py-0">\n                    <v-text-field v-model="hours" persistent-hint :hint="formatHint" :color="color" @change="updateHours" class="ma-0 pa-0"></v-text-field>\n                </v-col>\n            </v-row>\n        </v-expansion-panel-content>\n    </v-expansion-panel>\n    ',props:{day:{type:Object},data:{type:Object}},data(){return{opens:this.data.opens,closes:this.data.closes,closed:this.data.closed,hours:"",days:["sunday","monday","tuesday","wednesday","thursday","friday","saturday"],regexp24hour:/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/im,regexp12hour:/^(1[0-2]|0?[1-9]):[0-5][0-9]\s?([ap]m)$/im}},mounted(){this.hours=this.businessHours,stBus.$on("day-error",({day:day,option:option,value:value})=>{this.day===day&&(this[option]=value)})},beforeDestroy(){stBus.$off("day-error")},methods:{updateHours(){if(!this.regexp.test(this.hours))return;const hours=this.hours.split("-");this.opens=hours[0].trim(),this.closes=hours[1].trim(),this.update()},show(day){return!this.$parent.$parent.$parent.currentDayOnly||this.isCurrentDay(day)},isCurrentDay(day){return day===this.currentDay},update(){stBus.$emit("update-setting",{option:this.day,value:this.settings,encode:!0})},convertTo12(time,opening=!1){if(this.regexp24hour.test(time)){let[hh,mm]=time.split(":");const hours=parseInt(hh),daytime=hours<12?"AM":"PM";var hour=hours%12||12;return(hour=hour<10?"0"+hour:hour)+":"+mm+daytime}return this.regexp12hour.test(time)?time:opening?"08:00AM":"05:00PM"},convertTo24(time,opening=!1){if(this.regexp12hour.test(time)){const daytime=(time=time.toLowerCase()).includes("am")?"am":"pm";let[hh,mm]=time.replace(daytime,"").split(":");const hours="12"===hh?"00":"pm"===daytime?parseInt(hh)+12:hh;return hours+":"+mm}return this.regexp24hour.test(time)?time:opening?"08:00":"17:00"}},computed:{regexp(){return this.$parent.$parent.$parent.regexp},currentDay(){return this.days[(new Date).getDay()]},color(){return this.regexp.test(this.hours)?"primary":"red"},format24hour(){return this.$parent.$parent.$parent.format24hour},settings(){return{opens:this.opens,closes:this.closes,closed:this.closed}},formatHint(){return this.format24hour?"24 hour format (hh:mm)":"12 hour format (hh:mm am/pm)"},businessHours(){const convert=this.format24hour?"convertTo24":"convertTo12";return this[convert](this.opening,!0)+" - "+this[convert](this.closing,!1)}},watch:{format24hour(){this.hours=this.businessHours}}});